<?xml version="1.0"?>
<!--

  Copyright (c) 2019, PAL Robotics, S.L.
  All rights reserved.

  This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/ or send a letter to
  Creative Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.
-->
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!--File includes-->
  <xacro:include filename="$(find ari_description)/urdf/deg_to_rad.xacro" />
  <xacro:include filename="$(find ari_description)/urdf/head/head.transmission.xacro" />
  <xacro:include filename="$(find ari_description)/urdf/sensors/rpi_camera.gazebo.xacro" />
  <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro" />
  <!--Constant parameters-->
  <xacro:property name="head_1_joint_offset" value="0.0" />
  <xacro:property name="head_2_joint_offset" value="0.0" />
  <xacro:property name="head_friction" value="1.0" />
  <xacro:property name="head_damping"  value="0.5" />
  <xacro:property name="head_max_vel"  value="3.0" />
  <xacro:property name="head_eps"      value="0.07" />
  <xacro:property name="head_1_lower_limit" value="-75"/>
  <xacro:property name="head_1_upper_limit" value="75"/>
  <xacro:property name="head_2_lower_limit" value="-15"/>
  <xacro:property name="head_2_upper_limit" value="25"/>

  <!--Constant parameters-->
  <xacro:property name="head_realsense_camera_position_x" value="0.05215" />
  <xacro:property name="head_realsense_camera_position_y" value="0.1675" />
  <xacro:property name="head_realsense_camera_position_z" value="0.0" />
  <xacro:property name="head_realsense_camera_orientation_r" value="${-90 * deg_to_rad}" />
  <xacro:property name="head_realsense_camera_orientation_p" value="0.0" />
  <xacro:property name="head_realsense_camera_orientation_y" value="0.0" />



  <!--************************-->
  <!--     HEAD_1 (PAN)       -->
  <!--************************-->
  <xacro:macro name="head_1" params="name parent robot_model">
    <link name="${name}_link">
      <inertial>
        <origin xyz="0.011917 0.00089501 0.08" rpy="0 0 0"/>
        <mass value="0.35824"/>
        <inertia ixx="0.00038949" ixy="-2.99E-07" ixz="-1.0058E-05"
                 iyy="0.0002826" iyz="-1.3354E-09"
                 izz="0.00038119"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <xacro:if value="${robot_model == 'v1'}">
            <mesh filename="package://ari_description/meshes/head/head_1.stl" scale="1 1 1"/>
          </xacro:if>
          <xacro:if value="${robot_model == 'v2'}">
            <mesh filename="package://ari_description/meshes/head/head_1_v2.stl" scale="1 1 1"/>
          </xacro:if>
        </geometry>
        <material name="White" />
      </visual>
      <collision>
        <origin xyz="0.0 0 0" rpy="0 0 0.0" />
        <geometry>
          <xacro:if value="${robot_model == 'v1'}">
            <mesh filename="package://ari_description/meshes/head/head_1_collision.stl" scale="1 1 1"/>
          </xacro:if>
          <xacro:if value="${robot_model == 'v2'}">
            <mesh filename="package://ari_description/meshes/head/head_1_v2.stl" scale="1 1 1"/>
          </xacro:if>
        </geometry>
        <material name="White" />
      </collision>
    </link>

    <joint name="${name}_joint" type="revolute">
      <parent link="${parent}"/>
      <child link="${name}_link"/>
      <xacro:if value="${robot_model == 'v1'}">
        <origin xyz="-0.2255 0 1.1915"  rpy="0 0 0" />
      </xacro:if>
      <xacro:if value="${robot_model == 'v2'}">
        <origin xyz="-0.22 0.0 1.207"  rpy="0 0 0" />
      </xacro:if>
      <axis xyz="0 0 1" />
      <limit lower="${head_1_lower_limit * deg_to_rad}" upper="${head_1_upper_limit * deg_to_rad}" effort="3.4" velocity="${head_max_vel}" />
      <dynamics damping="${head_damping}" friction="${head_friction}"/>

      <safety_controller k_position="20"
                         k_velocity="20"
                         soft_lower_limit="${head_1_lower_limit * deg_to_rad + head_eps}"
                         soft_upper_limit="${head_1_upper_limit * deg_to_rad - head_eps}" />
    </joint>

    <gazebo reference="${name}_link">
      <mu1>0.9</mu1>
      <mu2>0.9</mu2>
      <material>Gazebo/White</material>
    </gazebo>

    <gazebo reference="${name}_joint">
       <implicitSpringDamper>1</implicitSpringDamper>
    </gazebo>

    <!-- extensions -->
    <xacro:head_transmission name="${name}" reduction="1" offset_value="${head_1_joint_offset}"/>

  </xacro:macro>

  <!--************************-->
  <!--      HEAD_2 (TILT)     -->
  <!--************************-->
  <xacro:macro name="head_2" params="name parent robot_model">
    <link name="${name}_link">
      <inertial>
        <origin xyz="-0.00696564558843529 0.101996367574138 -0.0008447177604265" rpy="0 0 0"/>
        <mass value="0.87177"/>
        <inertia ixx="0.00348124070979026" ixy="-0.000574703524917147" ixz="3.53158443864736E-08"
                 iyy="0.0023941695403699" iyz="2.1916879659837E-07"
                 izz="0.00298511989538667"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ari_description/meshes/head/head_2.stl" scale="1 1 1"/>
        </geometry>
        <material name="White" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ari_description/meshes/head/head_2_collision.stl" scale="1 1 1"/>
        </geometry>
        <material name="White" />
      </collision>
    </link>

    <joint name="${name}_joint" type="revolute">
      <parent link="${parent}"/>
      <child link="${name}_link"/>
      <xacro:if value="${robot_model == 'v1'}">
        <origin xyz="0.0425000000000001 0 0.093"  rpy="${90.0 * deg_to_rad} 0 0" />
      </xacro:if>
      <xacro:if value="${robot_model == 'v2'}">
        <origin xyz="0.0425 0.0 0.1011"  rpy="${90.0 * deg_to_rad} 0 0" />
      </xacro:if>
      <axis xyz="0 0 -1" />
      <limit lower="${head_2_lower_limit * deg_to_rad}" upper="${head_2_upper_limit * deg_to_rad}" effort="3.26" velocity="${head_max_vel}" />
      <dynamics damping="${head_damping}" friction="${head_friction}"/>

      <safety_controller k_position="20"
                         k_velocity="20"
                         soft_lower_limit="${head_2_lower_limit * deg_to_rad + head_eps}"
                         soft_upper_limit="${head_2_upper_limit * deg_to_rad - head_eps}" />
    </joint>

    <gazebo reference="${name}_link">
      <material>Gazebo/White</material>
    </gazebo>

    <xacro:head_transmission name="${name}" reduction="1" offset_value="${head_2_joint_offset}"/>

  </xacro:macro>


  <!--************************-->
  <!--      HEAD_CAMERA       -->
  <!--************************-->

  <!-- Optional head realsense camera -->
  
  <xacro:macro name="head_rgbd" params="name parent">
    <sensor_d435 parent="head_2_link" name="head_front_camera" topics_ns="head_front_camera">
      <origin xyz="${head_realsense_camera_position_x} ${head_realsense_camera_position_y} ${head_realsense_camera_position_z}"
            rpy="${head_realsense_camera_orientation_r} ${head_realsense_camera_orientation_p} ${head_realsense_camera_orientation_y}"/>
    </sensor_d435>
  </xacro:macro>


  <!-- Head RGB camera -->
  <xacro:macro name="head_front_camera" params="name parent">
  <link name="${name}_link">
    <inertial>
      <origin xyz="-0.00619317919404934 -4.45435622691566E-05 -8.22112600169511E-05" rpy="0 0 0"/>
      <mass value="0.00115745344894968"/>
      <inertia ixx="6.76913771029748E-08" ixy="2.52492243040059E-13" ixz="-3.60412180500293E-11"
               iyy="2.88827920072855E-08" iyz="-1.65336506314803E-13"
               izz="3.97290092554434E-08"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://ari_description/meshes/sensors/${name}.stl" scale="1 1 1"/>
      </geometry>
      <material name="DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://ari_description/meshes/sensors/${name}.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>

  <joint name="${name}_joint" type="fixed">
    <origin xyz="0.0633629998680001 0.181996035631448 0" rpy="${-90 * deg_to_rad} 0 0" />
    <parent link="${parent}" />
    <child link="${name}_link" />
    <axis xyz="0 0 0" />
  </joint>

  <joint name="${name}_color_optical_joint" type="fixed">
    <origin xyz="0.0 0.0 0.0" rpy="${-90 * deg_to_rad} 0 ${-90 * deg_to_rad}" />
    <parent link="${name}_link" />
    <child link="${name}_color_optical_frame" />
    <axis xyz="0 0 0" />
  </joint>
  <link name="${name}_color_optical_frame"/>

  <!-- Gazebo plugin -->
  <xacro:rpi_camera_gazebo name="${name}" topic="${name}/color" frame="${name}_color_optical_frame"/>
  </xacro:macro>

  <!-- Optional thermal camera -->
  <xacro:macro name="thermal_camera" params="name parent">
    <joint name="thermal_camera_joint" type="fixed">
        <parent link="${parent}"/>
        <child link="thermal_camera"/>
        <origin xyz="0.05 0.15 0" rpy="${0*deg_to_rad} ${-90*deg_to_rad} ${-180*deg_to_rad}" />
    </joint>
    <link name="thermal_camera">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="0.0001" />
            <inertia ixx="0.0001"  ixy="0"  ixz="0" iyy="0.0001" iyz="0" izz="0.0001" />
        </inertial>
    </link>
  </xacro:macro>


  <joint name="ear_led_left_link" type="fixed">
    <origin xyz="0.021 0.095 0.192" rpy="-0.1 0 0.0" />
    <child link="ear_led_left_frame" />
    <parent link="head_1_link"/>
  </joint>
  <link name="ear_led_left_frame">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="0.001" /> <!-- matrix below must not be zero, or Gazebo won't load -->
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.000001" iyz="0.0"
               izz="0.0001" />
    </inertial>
  </link>
  <joint name="ear_led_right_link" type="fixed">
    <origin xyz="0.021 -0.095 0.192" rpy="-0.1 0.0 3.14" />
    <child link="ear_led_right_frame" />
    <parent link="head_1_link"/>
  </joint>
  <link name="ear_led_right_frame">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="0.001" /> <!-- matrix below must not be zero, or Gazebo won't load -->
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.000001" iyz="0.0"
               izz="0.0001" />
    </inertial>
  </link>

   <!-- EYE FRAMES -->
  <!-- Eyes are located 3cm behind the screen-->
  <link name="sellion_link"/>

  <joint name="sellion_joint" type="fixed">
    <origin xyz="0.04 0.09205 0" rpy="${-90 * deg_to_rad} 0 0"/>
    <child link="sellion_link" />
    <parent link="head_2_link"/>
  </joint>

  <link name="eye_right_link"/>

  <joint name="eye_right_joint" type="fixed">
    <origin xyz="0.0 0.0344 0" rpy="0 0 0"/>
    <child link="eye_right_link" />
    <parent link="sellion_link"/>
  </joint>

  <link name="eye_left_link"/>

  <joint name="eye_left_joint" type="fixed">
    <origin xyz="0 -0.0344 0" rpy="0 0 0"/>
    <child link="eye_left_link" />
    <parent link="sellion_link"/>
  </joint>






  <xacro:macro name="head" params="name parent robot_model">
    <xacro:head_1 name="${name}_1" parent="${parent}" robot_model="${robot_model}" />
    <xacro:head_2 name="${name}_2" parent="${name}_1_link" robot_model="${robot_model}"/>
    <xacro:if value="${camera_model_head == 'raspi'}">
      <xacro:head_front_camera name="${name}_front_camera" parent="${name}_2_link"/>
    </xacro:if>
    <xacro:if value="${camera_model_head == 'D435i'}">
      <xacro:head_rgbd name="${name}_rgbd" parent="${name}_2_link"/>
    </xacro:if>
    <xacro:if value="${(has_thermal == 'true') or (has_thermal == True) }">
      <xacro:thermal_camera name="thermal_camera" parent="${name}_2_link"/>
    </xacro:if> 
 </xacro:macro>

</robot>

