<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="tf_prefix" default=""/>
  <arg name="robot_model" default="v1"/>
  <param name="mobile_base_controller/base_frame_id" value="$(eval ('base_footprint' if tf_prefix == '' else tf_prefix+'/base_footprint'))"/>
  <param name="mobile_base_controller/odom_frame_id" value="$(eval ('odom' if tf_prefix == '' else tf_prefix+'/odom'))"/>

  <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
  <rosparam command="load" file="$(find ari_controller_configuration)/config/joint_trajectory/joint_trajectory_controllers_$(arg robot_model).yaml" />
  <rosparam command="load" file="$(find ari_controller_configuration)/config/current_limit_controllers_$(arg robot_model).yaml"/>
  <rosparam command="load" file="$(find ari_controller_configuration)/config/joint_state_controller_extra_joints_$(arg robot_model).yaml" ns="joint_state_controller"/>
  <rosparam command="load" file="$(find ari_controller_configuration)/config/joint_state_controller_extra_joints_$(arg robot_model).yaml" ns="joint_torque_sensor_state_controller"/>

  <!-- Set up controllers -->
  <arg name="controller_list"
       value="head_controller
              joint_state_controller
              arm_left_controller
              arm_left_current_limit_controller
              arm_right_controller
              arm_right_current_limit_controller
              mobile_base_controller
              wheels_current_limit_controller"/>

  <!-- Controllers that come up started -->
  <node name="default_controllers_spawner"
        pkg="controller_manager" type="spawner" output="screen"
        args="--timeout 120 $(arg controller_list)" />

  <!-- Point head action -->
  <group ns="head_controller">
    <node name="point_head_action" pkg="head_action" type="head_action" output="screen">
      <rosparam>
        pan_link:  head_1_link
        tilt_link: head_2_link
        success_angle_threshold: 0.01
      </rosparam>
    </node>
  </group>
</launch>

